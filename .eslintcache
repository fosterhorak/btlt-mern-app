[{"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/index.js":"1","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/App/App.jsx":"2","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-service.js":"3","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/AuthPage/AuthPage.jsx":"4","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-api.js":"5","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewLogForm/NewLogForm.jsx":"6","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/Aside/Aside.jsx":"7","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewExerciseForm/NewExerciseForm.jsx":"8","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/logs-api.js":"9","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/exercises-api.js":"10","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/send-request.js":"11","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailPanel.jsx":"12","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailBottom/ExerciseDetailBottom.jsx":"13","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailTop/ExerciseDetailTop.jsx":"14","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/VisitorHeader/VisitorHeader.jsx":"15","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/LoginForm/LoginForm.jsx":"16","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/SignUpForm/SignUpForm.jsx":"17","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogListPanel/LogListPanel.jsx":"18","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogDetailPanel/LogDetailPanel.jsx":"19","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListPanel.jsx":"20","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListCard/ExerciseListCard.jsx":"21","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/UpdateExerciseForm/UpdateExerciseForm.jsx":"22","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailTop/DeleteExerciseForm/DeleteExerciseForm.jsx":"23"},{"size":305,"mtime":1611689326764,"results":"24","hashOfConfig":"25"},{"size":5636,"mtime":1612151924902,"results":"26","hashOfConfig":"25"},{"size":1520,"mtime":1611942448560,"results":"27","hashOfConfig":"25"},{"size":757,"mtime":1611969199748,"results":"28","hashOfConfig":"25"},{"size":1292,"mtime":1611943401964,"results":"29","hashOfConfig":"25"},{"size":218,"mtime":1611788264712,"results":"30","hashOfConfig":"25"},{"size":1265,"mtime":1612091441743,"results":"31","hashOfConfig":"25"},{"size":6830,"mtime":1612088256805,"results":"32","hashOfConfig":"25"},{"size":871,"mtime":1611820265549,"results":"33","hashOfConfig":"25"},{"size":1222,"mtime":1612147610482,"results":"34","hashOfConfig":"25"},{"size":892,"mtime":1611943371446,"results":"35","hashOfConfig":"25"},{"size":1583,"mtime":1612146967099,"results":"36","hashOfConfig":"25"},{"size":785,"mtime":1611966398310,"results":"37","hashOfConfig":"25"},{"size":3262,"mtime":1612148168373,"results":"38","hashOfConfig":"25"},{"size":416,"mtime":1612090581304,"results":"39","hashOfConfig":"25"},{"size":1522,"mtime":1612089307243,"results":"40","hashOfConfig":"25"},{"size":1889,"mtime":1612089339287,"results":"41","hashOfConfig":"25"},{"size":223,"mtime":1611968212072,"results":"42","hashOfConfig":"25"},{"size":236,"mtime":1611968181600,"results":"43","hashOfConfig":"25"},{"size":1115,"mtime":1612151955203,"results":"44","hashOfConfig":"25"},{"size":757,"mtime":1612152135689,"results":"45","hashOfConfig":"25"},{"size":8640,"mtime":1612085849088,"results":"46","hashOfConfig":"25"},{"size":1275,"mtime":1612151164212,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"f5jdei",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/index.js",[],["98","99"],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/App/App.jsx",["100","101"],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-service.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/AuthPage/AuthPage.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-api.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewLogForm/NewLogForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/Aside/Aside.jsx",["102"],"import { Link, NavLink } from 'react-router-dom';\nimport * as userService from '../../utilities/users-service';\nimport './Aside.css';\n\nexport default function Aside({ user, setUser }) {\n    function handleLogOut() {\n        userService.logOut();\n        setUser(null);\n    }\n\n    return (\n        <div className=\"aside\">\n            <div className=\"aside-logo\">\n                <h1>BTLT LOGO</h1> \n                <small><small><span>BETTER THAN LAST TIME</span></small></small>\n                <hr/>\n            </div>\n            <div className=\"aside-nav\">\n                <Link exact to=\"/new-log\"> <button id=\"nav-btn\"> NEW LOG </button></Link>\n                <Link exact to=\"/logs\"> <button id=\"nav-btn\">EXERCISE LOGS</button> </Link>\n                <Link exact to=\"/exercises\"><button id=\"nav-btn\">EXERCISES</button></Link>\n                <Link exact to=\"/new-exercise\"><button id=\"nav-btn\"> NEW EXERCISE</button> </Link>\n            </div>\n            <div className=\"aside-logout\">\n                <span><strong id=\"name\"> Hi, {user.name}!</strong></span><br/>\n                <span>{user.email}</span>\n                <Link to=\"\" onClick={handleLogOut}> <button className=\"logout\">LOG OUT</button> </Link> \n            </div>\n        </div>\n\n    );\n}\n\n","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewExerciseForm/NewExerciseForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/logs-api.js",["103"],"const BASE_URL = '/api/logs';\n\n// export function getAll() {\n//     return fetch(BASE_URL)\n//     .then(res => res.json());\n// }\n\n// export function create(log) {\n//     return fetch(BASE_URL, {\n//         method: \"POST\",\n//         headers: {\n//             \"content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify(log)\n//     }).then(res => res.json());\n// }\n\n// export function update(log) {\n//     return fetch(`${BASE_URL}/${log._id}`, {\n//         method: \"PUT\",\n//         headers: {\n//             \"content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify(log)\n//     }).then(res => res.json());\n// }\n\n// export function deleteOne(logID) {\n//     return fetch(`${BASE_URL}/${logID}`, {\n//         method: \"DELETE\",\n//         headers: {\n//             \"content-type\": \"application/json\",\n//         }\n//     });\n// }","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/exercises-api.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/send-request.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailBottom/ExerciseDetailBottom.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailTop/ExerciseDetailTop.jsx",["104"],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/VisitorHeader/VisitorHeader.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/LoginForm/LoginForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/SignUpForm/SignUpForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogListPanel/LogListPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogDetailPanel/LogDetailPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListCard/ExerciseListCard.jsx",["105"],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/UpdateExerciseForm/UpdateExerciseForm.jsx",["106","107","108"],"import React, {useState, useRef, useEffect} from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport './UpdateExerciseForm.css';\nimport Popup from 'reactjs-popup';\n\n\n\nexport default function UpdateExerciseForm({ activeExercise, handleUpdateExercise, setUpdateExerciseForm }) {\n    // const location = useLocation();\n\n    const [invalidForm, setInvalidForm] = useState(true);\n    const [formData, setFormData] = useState({\n        _id: activeExercise._id,\n        name: activeExercise.name,\n        category: activeExercise.category, \n        logType: activeExercise.logType,\n        description: activeExercise.description,\n        demoLink: activeExercise.demoLink, \n        creatorEmail: activeExercise.creatorEmail,\n        creator: activeExercise.creator,\n    });\n    \n    const formRef = useRef();\n\n    useEffect(() => {\n        formRef.current.checkValidity() ? setInvalidForm(false) : setInvalidForm(true);\n    }, [formData]);\n\n    useEffect(() => {\n        setFormData({\n            _id: activeExercise._id,\n            name: activeExercise.name,\n            category: activeExercise.category, \n            logType: activeExercise.logType,\n            description: activeExercise.description,\n            demoLink: activeExercise.demoLink, \n            creatorEmail: activeExercise.creatorEmail,\n            creator: activeExercise.creator,\n        });\n\n    }, [activeExercise]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        handleUpdateExercise(formData);\n    }\n    \n    const handleChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // hook updateExerciseFrom to false...\n    const handleCancel = (e) => {\n        e.preventDefault()\n        setUpdateExerciseForm(false);\n    }\n\n    // ice box: allow update of all form components if no logs have been created yet... otherwise only allow select properties to be updated\n    // ice box: allow for users to create a new exercise by copying an existing one... opens new exercise form with copied content already \n    // reminder -- if i update a property of an exercise that is pulled into a log... I'll want to make sure it get's updated on the log instance as well \n            // or perhaps, just avoid doing this.. only reference the exercise._id in the log model\n    return (\n        <div className=\"new-form\">\n            <h1 className=\"update-form\">UPDATE EXERCISE</h1> \n            <div className=\"scrollable\">\n            <form className=\"update-form\" autoComplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n    \n\n                    <div className=\"form-groupL\">\n                        <label> <strong>EXERCISE NAME</strong> </label>\n                    </div>\n                    <div className=\"form-groupR\">\n                        <input\n                            className=\"form-control\"\n                            id=\"ee\"\n                            name=\"name\"\n                            value={formData.name}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n\n\n                    <div className=\"form-groupL\">\n                        <label><strong>CATEGORY</strong> </label>\n                    </div>\n                    <div className=\"form-groupR\">\n                        <select \n                            className=\"form-control\" \n                            id=\"ee\"\n                            name=\"category\"\n                            value={formData.category}\n                            onChange={handleChange}\n                            required>\n                            <option value=\"Weights\">WEIGHTS</option>\n                            <option value=\"Kettlebells\">KETTLEBELLS</option>\n                            <option value=\"Body Weight\">BODY WEIGHT</option>\n                            <option value=\"Mixed\">MIXED</option>\n                            <option value=\"Cardio\">CARDIO</option>\n                            <option value=\"Interval\">INTERVAL</option>\n                            <option value=\"Stretching/Mobility\">STRETCHING/MOBILITY</option>\n                            <option value=\"Other\">OTHER</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-groupL\">\n                        <label><strong>LOG TYPE</strong></label>\n                        <p className=\"update-exercise\">NOTE: \"LOG TYPE\" cannot be changed as it will impact existing logged exercises.</p> \n                    </div>\n                    <div className=\"form-groupR\">\n                        <label>{activeExercise.logType}</label>\n                        { activeExercise.logType === 'Std Lft' ? <p className=\"update-exercise\">Tracks: weight, reps, sets, rest interval (optional), *calculates volume</p> : ''}\n                        { activeExercise.logType === 'Body Wt' ? <p className=\"update-exercise\">Tracks: reps, sets, rest interval (optional), *calculates volume</p> : ''}\n                        { activeExercise.logType === 'EMOM(std)' ? <p className=\"update-exercise\">Tracks: time, number of rounds, reps per round, *calculates volume</p> : ''}\n                        { activeExercise.logType === 'EMOM(wtd)' ? <p className=\"update-exercise\">Tracks: weight, time, number of rounds, reps per round, *calculates volume</p> : ''}\n                        { activeExercise.logType === 'AMRAP(std)' ? <p className=\"update-exercise\">Tracks: time cap, number of reps</p> : ''}\n                        { activeExercise.logType === 'AMRAP(wtd)' ? <p className=\"update-exercise\">Tracks: weight, time cap, number of rep</p> : ''}\n                        { activeExercise.logType === 'RepsForTime(std)' ? <p className=\"update-exercise\">Tracks: number of reps, time</p> : ''}\n                        { activeExercise.logType === 'RepsForTime(wtd)' ? <p className=\"update-exercise\">Tracks: weight, number of reps, time</p> : ''}\n                        { activeExercise.logType === 'Cardio' ? <p className=\"update-exercise\">Tracks: distance,  time, avg speed</p> : ''}\n                        { activeExercise.logType === 'Simple' ? <p className=\"update-exercise\">Tracks: completed(y/n)</p> : ''}\n                    </div>\n\n\n                    <div className=\"form-groupL\">\n                        <label><strong>DESCRIPTION</strong> </label>\n                        <p className=\"update-exercise\">Feel free to update the description to add details, but we don't recommend changing the workout (especially if you already have logged some exercises). You want to be sure you're performing the same workout so your data is helpful and accurate.</p>\n                    </div>\n                    <div className=\"form-groupR\">\n                        <textarea \n                            className=\"form-control\"\n                            id=\"ee\"\n                            name=\"description\"  \n                            value={formData.description}\n                            onChange={handleChange}\n                            required\n                            type=\"text\" \n                            cols=\"30\" \n                            rows=\"9\">\n                        </textarea>\n                    </div>\n\n\n                    <div className=\"form-groupL\">\n                        <label><strong>DEMO URL</strong> </label>\n                        { activeExercise.demoLink ? \n                            <p className=\"update-exercise\">Feel free to update your link to your chosen website or video for this exercise.</p>\n                        :\n                            <p className=\"update-exercise\">Feel free to add a link to a website or video for this exercise.</p>\n                        }\n                    </div>\n                    <div className=\"form-groupR\">   \n                        <input\n                            className=\"form-control\"\n                            id=\"ee\"\n                            name=\"demoLink\"\n                            value={formData.demoLink}\n                            onChange={handleChange}\n                        />\n                    </div>\n                \n\n                    <button\n                        className=\"form-btn update-exercise-btn\"\n                        type=\"submit\"\n                        disabled={invalidForm}\n                        >\n                        UPDATE EXERCISE\n                    </button>\n\n            </form>\n            <button className=\"cncl-form\" onClick={handleCancel}> <h5>CANCEL</h5></button>\n\n            </div>\n        </div>\n    );\n}","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailTop/DeleteExerciseForm/DeleteExerciseForm.jsx",["109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":16,"column":13,"nodeType":"116","messageId":"117","endLine":16,"endColumn":19},{"ruleId":"114","severity":1,"message":"118","line":17,"column":8,"nodeType":"116","messageId":"117","endLine":17,"endColumn":26},{"ruleId":"114","severity":1,"message":"119","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":23},{"ruleId":"114","severity":1,"message":"120","line":1,"column":7,"nodeType":"116","messageId":"117","endLine":1,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":69,"column":37,"nodeType":"123","endLine":69,"endColumn":87},{"ruleId":"114","severity":1,"message":"124","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"114","severity":1,"message":"124","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"114","severity":1,"message":"125","line":2,"column":15,"nodeType":"116","messageId":"117","endLine":2,"endColumn":26},{"ruleId":"114","severity":1,"message":"126","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":32,"column":21,"nodeType":"123","endLine":32,"endColumn":25},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'logAPI' is defined but never used.","Identifier","unusedVar","'UpdateExerciseForm' is defined but never used.","'NavLink' is defined but never used.","'BASE_URL' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Link' is defined but never used.","'useLocation' is defined but never used.","'Popup' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]
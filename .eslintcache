[{"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/index.js":"1","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/App/App.jsx":"2","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-service.js":"3","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/AuthPage/AuthPage.jsx":"4","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-api.js":"5","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewLogForm/NewLogForm.jsx":"6","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/Aside/Aside.jsx":"7","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewExerciseForm/NewExerciseForm.jsx":"8","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/logs-api.js":"9","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/exercises-api.js":"10","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/send-request.js":"11","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailPanel.jsx":"12","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailBottom/ExerciseDetailBottom.jsx":"13","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailTop/ExerciseDetailTop.jsx":"14","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/EditExerciseForm/EditExerciseForm.jsx":"15","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/VisitorHeader/VisitorHeader.jsx":"16","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/LoginForm/LoginForm.jsx":"17","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/SignUpForm/SignUpForm.jsx":"18","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogListPanel/LogListPanel.jsx":"19","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogDetailPanel/LogDetailPanel.jsx":"20","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListPanel.jsx":"21","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListCard/ExerciseListCard.jsx":"22"},{"size":305,"mtime":1611689326764,"results":"23","hashOfConfig":"24"},{"size":4325,"mtime":1612072915618,"results":"25","hashOfConfig":"24"},{"size":1520,"mtime":1611942448560,"results":"26","hashOfConfig":"24"},{"size":757,"mtime":1611969199748,"results":"27","hashOfConfig":"24"},{"size":1292,"mtime":1611943401964,"results":"28","hashOfConfig":"24"},{"size":218,"mtime":1611788264712,"results":"29","hashOfConfig":"24"},{"size":1208,"mtime":1611908957050,"results":"30","hashOfConfig":"24"},{"size":6744,"mtime":1611952374386,"results":"31","hashOfConfig":"24"},{"size":871,"mtime":1611820265549,"results":"32","hashOfConfig":"24"},{"size":1134,"mtime":1611949702269,"results":"33","hashOfConfig":"24"},{"size":892,"mtime":1611943371446,"results":"34","hashOfConfig":"24"},{"size":896,"mtime":1611966364540,"results":"35","hashOfConfig":"24"},{"size":785,"mtime":1611966398310,"results":"36","hashOfConfig":"24"},{"size":2802,"mtime":1611967872906,"results":"37","hashOfConfig":"24"},{"size":8056,"mtime":1611959694461,"results":"38","hashOfConfig":"24"},{"size":286,"mtime":1611808716855,"results":"39","hashOfConfig":"24"},{"size":1522,"mtime":1611969735454,"results":"40","hashOfConfig":"24"},{"size":1889,"mtime":1611969775147,"results":"41","hashOfConfig":"24"},{"size":223,"mtime":1611968212072,"results":"42","hashOfConfig":"24"},{"size":236,"mtime":1611968181600,"results":"43","hashOfConfig":"24"},{"size":1051,"mtime":1611968412311,"results":"44","hashOfConfig":"24"},{"size":524,"mtime":1611964245973,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"f5jdei",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/index.js",[],["98","99"],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/App/App.jsx",["100"],"import { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { getUser } from '../../utilities/users-service';\nimport './App.css';\nimport AuthPage from '../AuthPage/AuthPage';\nimport Aside from '../../components/Aside/Aside';\nimport LogListPanel from '../../components/logComponents/LogListPanel/LogListPanel';\nimport LogDetailPanel from '../../components/logComponents/LogDetailPanel/LogDetailPanel';\nimport ExerciseListPanel from '../../components/exerciseComponents/ExerciseListPanel/ExerciseListPanel';\nimport ExerciseDetailPanel from '../../components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailPanel';\n\nimport NewLogForm from '../../components/NewLogForm/NewLogForm';\nimport NewExerciseForm from '../../components/NewExerciseForm/NewExerciseForm';\n\nimport * as exerciseAPI from '../../utilities/exercises-api';\nimport * as logAPI from '../../utilities/logs-api';\n\n\n\nexport default function App() {\n  const [user, setUser] = useState(getUser());\n  \n  const [exercises, setExercises] = useState([]);\n  const [activeExercise, setActiveExercise] = useState({});\n\n  \n  // const [logs, setLogs] = useState([]);\n  // const [activeLog, setActiveLog] = useState({});\n\n\n\n\n  const history = useHistory();\n\n  useEffect(() => {\n    history.push(\"/\")\n  }, [exercises, history])\n\n  // ----------- FUNCTIONS FOR EXERCISES --------------------\n  useEffect(() => {\n    async function getExercises(){\n      const exercises = await exerciseAPI.getAll();\n      setExercises(exercises);\n    }\n    getExercises();\n  }, [])\n\n  async function handleAddExercise(newExerciseData) {\n    const newExercise = await exerciseAPI.create(newExerciseData);\n    setExercises([...exercises, newExercise]);\n  }\n\n  async function handleUpdateExercise(updatedExerciseData) {\n    const updatedExercise = await exerciseAPI.update(updatedExerciseData);\n    const newExerciseArray = exercises.map(exercise =>\n      exercise._id === updatedExercise._id ? updatedExercise : exercise\n    );\n    setExercises(newExerciseArray);\n  }\n\n  // async function handleDeleteExercise(exerciseID) {\n  //   await exerciseAPI.deleteOne(exerciseID);\n  //   setExercises(exercises.filter(exercise => exercise._id !== exerciseID));\n  // }\n\n  // ----------- FUNCTIONS FOR LOGS --------------------\n  // useEffect(() => {\n  //   async function getLogs(){\n  //     const logs = await logAPI.getAll();\n  //     setLogs(logs);\n  //   }\n  //   getLogs();\n  // }, [])\n\n  // async function handleAddLog(newLogData) {\n  //   const newLog = await logAPI.create(newLogData);\n  //   setLogs([...logs, newLog]);\n  // }\n\n  // async function handleUpdateLog(updatedLogData) {\n  //   const updatedLog = await logAPI.update(updatedLogData);\n  //   const newLogArray = logs.map(log =>\n  //     log._id === updatedLog._id ? updatedLog : log\n  //   );\n  //   setLogs(newLogArray);\n  // }\n\n  // async function handleDeleteLog(logID) {\n  //   await logAPI.deleteOne(logID);\n  //   setLogs(logs.filter(log => log._id !== logID));\n  // }\n\n\n  return (\n    <div className=\"App\">\n      { user ?\n          <>\n            <main>\n            <Aside user={user} setUser={setUser} />\n            <Switch>\n              <Route exact path=\"/logs\">\n                <div className=\"list-and-detail\">\n                <LogListPanel />\n                <LogDetailPanel />\n                </div>\n              </Route>\n              <Route path=\"/exercises\">\n                <div className=\"list-and-detail\">\n                <ExerciseListPanel exercises={exercises} setExercises={setExercises} activeExercise={activeExercise} setActiveExercise={setActiveExercise}/>\n                <ExerciseDetailPanel exercises={exercises} activeExercise={activeExercise}  handleUpdateExercise={handleUpdateExercise}/>\n                </div>\n              </Route>\n              <Route exact path=\"/new-log\">\n                <NewLogForm />\n              </Route>\n              <Route exact path=\"/new-exercise\">\n                <NewExerciseForm exercises={exercises} user={user} setExercises={setExercises} handleAddExercise={handleAddExercise}/>\n              </Route>\n              <Redirect to=\"/logs\"/>\n            </Switch>\n            </main>\n          </>\n        :\n          <>\n          <AuthPage setUser={setUser}/>\n          </>\n      }\n    </div>\n  );\n}\n","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-service.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/pages/AuthPage/AuthPage.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/users-api.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewLogForm/NewLogForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/Aside/Aside.jsx",["101"],"import { Link, NavLink } from 'react-router-dom';\nimport * as userService from '../../utilities/users-service';\nimport './Aside.css';\n\nexport default function Aside({ user, setUser }) {\n    function handleLogOut() {\n        userService.logOut();\n        setUser(null);\n    }\n\n    return (\n        <div className=\"aside\">\n            <div className=\"aside-logo\">\n                <h1>BTLT LOGO</h1> \n                <small><small><span>BETTER THAN LAST TIME</span></small></small>\n                <hr/>\n            </div>\n            <div className=\"aside-nav\">\n                <Link exact to=\"/\"> <button>Exercise Log</button> </Link>\n                <Link exact to=\"/exercises\"><button>Exercises</button></Link>\n                <Link exact to=\"/new-log\"> <button> New Log </button></Link>\n                <Link exact to=\"/new-exercise\"><button> New Exercise</button> </Link>\n            </div>\n            <div className=\"aside-logout\">\n                <span><strong id=\"name\"> Hi, {user.name}!</strong></span><br/>\n                <span>{user.email}</span>\n                <Link to=\"\" onClick={handleLogOut}> <button className=\"logout\">Log Out</button> </Link> \n            </div>\n        </div>\n\n    );\n}\n\n","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/NewExerciseForm/NewExerciseForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/logs-api.js",["102"],"const BASE_URL = '/api/logs';\n\n// export function getAll() {\n//     return fetch(BASE_URL)\n//     .then(res => res.json());\n// }\n\n// export function create(log) {\n//     return fetch(BASE_URL, {\n//         method: \"POST\",\n//         headers: {\n//             \"content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify(log)\n//     }).then(res => res.json());\n// }\n\n// export function update(log) {\n//     return fetch(`${BASE_URL}/${log._id}`, {\n//         method: \"PUT\",\n//         headers: {\n//             \"content-type\": \"application/json\"\n//         },\n//         body: JSON.stringify(log)\n//     }).then(res => res.json());\n// }\n\n// export function deleteOne(logID) {\n//     return fetch(`${BASE_URL}/${logID}`, {\n//         method: \"DELETE\",\n//         headers: {\n//             \"content-type\": \"application/json\",\n//         }\n//     });\n// }","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/exercises-api.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/utilities/send-request.js",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailBottom/ExerciseDetailBottom.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/ExerciseDetailTop/ExerciseDetailTop.jsx",["103"],"import './ExerciseDetailTop.css';\nimport Popup from 'reactjs-popup';\nimport EditExerciseForm from '../EditExerciseForm/EditExerciseForm';\n\nexport default function ExerciseDetailTop({activeExercise, exercises, handleUpdateExercise}) {\n\n    // i want the form to update an existing exercise to pop up and replace the two detail panels if the \"update\" button is selected\n    // must incorporate a new hook -- \"updateExercise\" -- into the existing ternary on this page...\n\n    return (\n        <>\n\n            <div className=\"top-half\">\n            <div className=\"detail-card\">\n                <div className=\"detail-card-header\">\n                <h1>{activeExercise.name}</h1>\n                <hr id=\"a\"/>\n                </div>\n                <div className=\"detail-card-body\">\n\n                    <div className=\"columnL\">\n                    <h3>Category: </h3>\n                    </div>\n                    <div className=\"columnR\">\n                    <h3>{activeExercise.category}</h3>\n                    </div>\n\n                    <div className=\"columnL\">\n                    <h3>Log Type: </h3>\n                    </div>\n                    <div className=\"columnR\">\n                    <h3>{activeExercise.logType}</h3>\n                    </div>\n\n                    <div className=\"columnL\">\n                    <h3>Description: </h3>\n                    </div>\n                    <div className=\"columnR\">\n                    <h3>{activeExercise.description}</h3>\n                    </div>\n\n                    { activeExercise.demoLink ? \n                    <>\n                    <div className=\"columnL\">\n                        <h3>Demo URL: </h3>\n                    </div>\n                    <div className=\"columnR\">\n                        <h4><a href={activeExercise.demoLink} target=\"_blank\"> LINK </a></h4>\n                    </div>\n                    </>\n                    : \"\"}\n                    <div className=\"temp\"><p>created by:</p><br/><p>user_id: </p></div> \n                    <div className=\"temp\"><p> {activeExercise.creatorEmail}</p><br/><p> {activeExercise.creator}</p></div>\n                </div>\n            </div>\n            <div className=\"update-delete-btn-container\">\n                <Popup \n                trigger={<button id=\"u\" className=\"ud-btns\">UPDATE</button>} \n                position=\"center center\"\n                arrow=\"false\"\n                closeOnClick>\n                <div className=\"exercise-update-popup\">\n                    <EditExerciseForm exercises={exercises} activeExercise={activeExercise}  handleUpdateExercise={handleUpdateExercise}/>\n                </div>\n                </Popup>  \n\n                <button id=\"d\"className=\"ud-btns\">DELETE</button>\n            </div>\n            </div>\n\n        </>\n    );\n}","/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseDetailPanel/EditExerciseForm/EditExerciseForm.jsx",["104","105"],"import React, {useState, useRef, useEffect} from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport './EditExerciseForm.css';\nimport Popup from 'reactjs-popup';\nimport { set } from 'mongoose';\n\n\n\nexport default function EditExerciseForm({ activeExercise, handleUpdateExercise, setOpen }) {\n    const location = useLocation();\n\n    const [invalidForm, setInvalidForm] = useState(true);\n    const [formData, setFormData] = useState({\n        name: activeExercise.name,\n        category: activeExercise.category, \n        logType: activeExercise.logType,\n        description: activeExercise.description,\n        demoLink: activeExercise.demoLink, \n        creatorEmail: activeExercise.creatorEmail,\n        creator: activeExercise.creator,\n    });\n    \n    const formRef = useRef();\n\n    useEffect(() => {\n        formRef.current.checkValidity() ? setInvalidForm(false) : setInvalidForm(true);\n    }, [formData]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        handleUpdateExercise(formData);\n    }\n    \n    const handleChange = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleCancel = (e) => {\n        e.preventDefault()\n        Popup.open=false;\n    }\n\n    // ice box: allow update of all form components if no logs have been created yet... otherwise only allow select properties to be updated\n    // ice box: allow for users to create a new exercise by copying an existing one... opens new exercise form with copied content already \n    // reminder -- if i update a property of an exercise that is pulled into a log... I'll want to make sure it get's updated on the log instance as well \n            // or perhaps, just avoid doing this.. only reference the exercise._id in the log model\n    return (\n        <div className=\"new-form\">\n            <h1 className=\"update-form\">Update Exercise</h1> \n            <div className=\"scrollable\">\n            <form className=\"update-form\" autoComplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n    \n\n                    <div className=\"form-groupL\">\n                        <label> <strong>Exercise Name</strong> </label>\n                    </div>\n                    <div className=\"form-groupR\">\n                        <input\n                            className=\"form-control\"\n                            id=\"ee\"\n                            name=\"name\"\n                            value={formData.name}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n\n\n                    <div className=\"form-groupL\">\n                        <label><strong>Category</strong> </label>\n                    </div>\n                    <div className=\"form-groupR\">\n                        <select \n                            className=\"form-control\" \n                            id=\"ee\"\n                            name=\"category\"\n                            value={formData.category}\n                            onChange={handleChange}\n                            required>\n                            <option value=\"Weights\">Weights</option>\n                            <option value=\"Kettlebells\">Kettlebells</option>\n                            <option value=\"Body Weight\">Body Weight</option>\n                            <option value=\"Mixed\">Mixed</option>\n                            <option value=\"Cardio\">Cardio</option>\n                            <option value=\"Interval\">Interval</option>\n                            <option value=\"Stretching/Mobility\">Stretching/Mobility</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-groupL\">\n                        <label><strong>Log Type</strong></label>\n                        <p className=\"update-exercise\">Note: \"Log Type\" cannot be changed as it will impact existing logged exercises.</p> \n                    </div>\n                    <div className=\"form-groupR\">\n                        <label>{activeExercise.logType}</label>\n                        { activeExercise.logType === 'Std Lft' ? <p className=\"update-exercise\">Tracks: weight, reps, sets, rest interval (optional), *calculates volume</p> : ''}\n                        { activeExercise.logType === 'Body Wt' ? <p className=\"update-exercise\">Tracks: reps, sets, rest interval (optional), *calculates volume</p> : ''}\n                        { activeExercise.logType === 'EMOM(std)' ? <p className=\"update-exercise\">Tracks: time, number of rounds, reps per round, *calculates volume</p> : ''}\n                        { activeExercise.logType === 'EMOM(wtd)' ? <p className=\"update-exercise\">Tracks: weight, time, number of rounds, reps per round, *calculates volume</p> : ''}\n                        { activeExercise.logType === 'AMRAP(std)' ? <p className=\"update-exercise\">Tracks: time cap, number of reps</p> : ''}\n                        { activeExercise.logType === 'AMRAP(wtd)' ? <p className=\"update-exercise\">Tracks: weight, time cap, number of rep</p> : ''}\n                        { activeExercise.logType === 'RepsForTime(std)' ? <p className=\"update-exercise\">Tracks: number of reps, time</p> : ''}\n                        { activeExercise.logType === 'RepsForTime(wtd)' ? <p className=\"update-exercise\">Tracks: weight, number of reps, time</p> : ''}\n                        { activeExercise.logType === 'Cardio' ? <p className=\"update-exercise\">Tracks: distance,  time, avg speed</p> : ''}\n                        { activeExercise.logType === 'Simple' ? <p className=\"update-exercise\">Tracks: completed(y/n)</p> : ''}\n                    </div>\n\n\n                    <div className=\"form-groupL\">\n                        <label><strong>Description</strong> </label>\n                        <p className=\"update-exercise\">Feel free to update the description to add details, but we don't recommend changing the workout (especially if you already have logged some exercises). You want to be sure you're performing the same workout so your data is helpful and accurate.</p>\n                    </div>\n                    <div className=\"form-groupR\">\n                        <textarea \n                            className=\"form-control\"\n                            id=\"ee\"\n                            name=\"description\"  \n                            value={formData.description}\n                            onChange={handleChange}\n                            required\n                            type=\"text\" \n                            cols=\"30\" \n                            rows=\"9\">\n                        </textarea>\n                    </div>\n\n\n                    <div className=\"form-groupL\">\n                        <label><strong>Demo URL</strong> </label>\n                        { activeExercise.demoLink ? \n                            <p className=\"update-exercise\">Feel free to add a link to a website/video for this exercise.</p>\n                        :\n                            <p className=\"update-exercise\">Feel free to update your link to your chosen website/video for this exercise.</p>\n                        }\n                    </div>\n                    <div className=\"form-groupR\">   \n                        <input\n                            className=\"form-control\"\n                            id=\"ee\"\n                            name=\"demoLink\"\n                            value={formData.demoLink}\n                            onChange={handleChange}\n                        />\n                    </div>\n                \n\n                    <button\n                        className=\"form-btn\"\n                        type=\"submit\"\n                        disabled={invalidForm}\n                        >\n                        UPDATE EXERCISE\n                    </button>\n\n            </form>\n            </div>\n            <Link onClick={handleCancel}> <h5>CANCEL</h5></Link>\n        </div>\n    );\n}",["106","107"],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/VisitorHeader/VisitorHeader.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/LoginForm/LoginForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/authPageComponents/SignUpForm/SignUpForm.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogListPanel/LogListPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/logComponents/LogDetailPanel/LogDetailPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListPanel.jsx",[],"/Users/fosterhorak/ga_course/code/btlt-mern-app/src/components/exerciseComponents/ExerciseListPanel/ExerciseListCard/ExerciseListCard.jsx",["108"],"import './ExerciseListCard.css';\nimport {Link} from 'react-router-dom';\n\n\n\nexport default function ExerciseListCard({ exercise, activeExercise, setActiveExercise }) {\n  \n  // icebox: add number of logs to card\n  return (\n    <>\n        <div onClick={() => setActiveExercise(exercise)} className={exercise === activeExercise ? \"exercise-card selected\" : \"exercise-card\"}>\n            <h1>{exercise.name}</h1> \n            <p className=\"b\"><span > {exercise.category.toUpperCase()} </span></p>\n        </div>\n\n    </>\n  );\n}\n\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":16,"column":13,"nodeType":"115","messageId":"116","endLine":16,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":23},{"ruleId":"113","severity":1,"message":"118","line":1,"column":7,"nodeType":"115","messageId":"116","endLine":1,"endColumn":15},{"ruleId":"119","severity":1,"message":"120","line":48,"column":29,"nodeType":"121","endLine":48,"endColumn":79},{"ruleId":"113","severity":1,"message":"122","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"113","severity":1,"message":"123","line":10,"column":11,"nodeType":"115","messageId":"116","endLine":10,"endColumn":19},{"ruleId":"109","replacedBy":"124"},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","severity":1,"message":"126","line":2,"column":9,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'logAPI' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'BASE_URL' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'set' is defined but never used.","'location' is assigned a value but never used.",["127"],["128"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]